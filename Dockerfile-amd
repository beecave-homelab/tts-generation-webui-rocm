#################################################
######### SETUP ROCM-5.7 and MiniConda  #########
#################################################
FROM rocm/dev-ubuntu-22.04:5.7 AS rocm

# Login as root user.    
USER root

# Install dependencies and rocm-5.7
RUN apt-get update -y && DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \ 
    wget git rocsparse-dev hipsparse-dev rocthrust-dev rocblas-dev hipblas-dev \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*

# Add the conda to PATH 
ENV PATH="/root/miniconda3/bin:${PATH}"
ARG PATH="/root/miniconda3/bin:${PATH}"

# Install and setup MiniConda
RUN wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh \
    && mkdir .conda \
    && bash Miniconda3-latest-Linux-x86_64.sh -b \
    && rm -f Miniconda3-latest-Linux-x86_64.sh

####################################################
############## SETUP CONDA & PYTORCH ###############
####################################################
FROM rocm AS rocm-pytorch

# Login as root user.    
USER root

# Copy the environment.yaml file to create conda environment
COPY environment.yaml .

# Create the conda environment and activate it
RUN conda env create -f environment.yaml \
    && echo "source activate tts-generation-webui" > ~/.bashrc

# Add conda environment to PATH
ENV PATH /root/miniconda3/envs/tts-generation-webui/bin:$PATH

# Ensure the environment is activated by default when running the container
SHELL ["conda", "run", "-n", "tts-generation-webui", "/bin/bash", "-c"]

# Install specific packages using pip
RUN /root/miniconda3/envs/tts-generation-webui/bin/pip install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/rocm5.7

####################################################
########### SETUP TTS-GENERATION-WEBUI #############
####################################################
FROM rocm-pytorch AS TTS-webui

# Login as root user.    
USER root

# Install all requirements
RUN apt-get update -y && DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
    git nano curl sudo libelf1 libnuma-dev build-essential git software-properties-common gcc g++ ffmpeg \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Install Node.Js
ENV NODE_VERSION=18.16.1
RUN curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.0/install.sh | bash
ENV NVM_DIR=/root/.nvm
RUN . "$NVM_DIR/nvm.sh" \
    && nvm install ${NODE_VERSION}
RUN . "$NVM_DIR/nvm.sh" \
    && nvm use v${NODE_VERSION}
RUN . "$NVM_DIR/nvm.sh" \
    && nvm alias default v${NODE_VERSION}
ENV PATH="$NVM_DIR/versions/node/v${NODE_VERSION}/bin/:${PATH}"
RUN node --version \
    && npm --version

# Clone the TTS-Generation-WebUI repository and change the current directory
WORKDIR /root/app
RUN git clone https://github.com/beecave-homelab/tts-generation-webui-rocm.git --branch rocm-5.7 --single-branch
WORKDIR /root/app/tts-generation-webui-rocm

RUN /root/miniconda3/envs/tts-generation-webui/bin/pip install -r requirements.txt --no-cache-dir
# RUN /root/miniconda3/envs/tts-generation-webui/bin/pip install -r requirements_audiocraft_only.txt --no-cache-dir
# RUN /root/miniconda3/envs/tts-generation-webui/bin/pip install -r requirements_audiocraft_deps.txt --no-cache-dir
# RUN /root/miniconda3/envs/tts-generation-webui/bin/pip install -r requirements_bark_hubert_quantizer.txt --no-cache-dir
# RUN /root/miniconda3/envs/tts-generation-webui/bin/pip install -r requirements_rvc.txt --no-cache-dir
# RUN /root/miniconda3/envs/tts-generation-webui/bin/pip install hydra-core==1.3.2 --no-cache-dir
# RUN /root/miniconda3/envs/tts-generation-webui/bin/pip install -r requirements_styletts2.txt --no-cache-dir
# RUN /root/miniconda3/envs/tts-generation-webui/bin/pip install -r requirements_vall_e.txt --no-cache-dir
# RUN /root/miniconda3/envs/tts-generation-webui/bin/pip install -r requirements_maha_tts.txt --no-cache-dir


ENV HSA_OVERRIDE_GFX_VERSION=10.3.0
RUN cd react-ui \
    && npm install \
    && npm run build
EXPOSE 3000
CMD python server.py
