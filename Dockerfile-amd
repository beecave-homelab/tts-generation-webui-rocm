### SETUP FOR AMD GPU DOCKER IMAGE ON UBUNTU 22.04 ###
FROM rocm/pytorch:rocm6.0.2_ubuntu22.04_py3.10_pytorch_2.1.2 AS rocm

# Copy sudoers file for passwordless sudo
# Create rocm-user
# Set environment variables and switch to rocm-user
COPY sudo-nopasswd /etc/sudoers.d/sudo-nopasswd
RUN useradd --create-home -G sudo,video --shell /bin/bash rocm-user
USER rocm-user
WORKDIR /home/rocm-user
ENV PATH="${PATH}:/opt/rocm/bin"
ENV HSA_OVERRIDE_GFX_VERSION=10.3.0

### INSTALLATION OF OTHER DEPENDENCIES ###
# Installation of TTS-Generation-WebUI
RUN sudo apt update -y && sudo apt install --no-install-recommends -y \
    git vim nano build-essential python3-pip gcc g++ ffmpeg curl \
    && sudo rm -rf /var/lib/apt/lists/*
    
# Install NVM and Node.js
ENV NODE_VERSION=18.16.1
ENV NVM_DIR=/home/rocm-user/.nvm
RUN curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.0/install.sh | bash \
    && . "${NVM_DIR}/nvm.sh" \ 
    && nvm install ${NODE_VERSION} \
    && . "${NVM_DIR}/nvm.sh" \
    && nvm use v${NODE_VERSION} \
    && . "${NVM_DIR}/nvm.sh" \
    && nvm alias default v${NODE_VERSION} 
ENV PATH="${NVM_DIR}/versions/node/v${NODE_VERSION}/bin/:${PATH}"
RUN node --version \
    && npm --version

# Set working directory for TTS-Generation-WebUI
# Clone the TTS-Generation-WebUI repository
# Set working directory to the cloned repo
# Install all requirements
WORKDIR /app
RUN git clone https://github.com/beecave-homelab/tts-generation-webui-rocm.git
WORKDIR /app/tts-generation-webui-rocm
RUN pip3 install --upgrade pip setuptools \
    && pip3 install -r requirements.txt --no-cache-dir \
    && pip3 install -r requirements_audiocraft_only.txt --no-deps \
    && pip3 install -r requirements_audiocraft_deps.txt --no-cache-dir \
    && pip3 install -r requirements_bark_hubert_quantizer.txt --no-cache-dir \
    && pip3 install -r requirements_rvc.txt --no-cache-dir \
    && pip3 install hydra-core==1.3.2 --no-cache-dir \
    && pip3 install -r requirements_styletts2.txt --no-cache-dir \
    && pip3 install -r requirements_vall_e.txt --no-cache-dir \
    && pip3 install -r requirements_maha_tts.txt --no-cache-dir

# Add React webui (testing)
# Expose port 3000
# Run the server
RUN cd react-ui && npm install && npm run build
EXPOSE 3000
CMD python server.py
